- name: kind => check existing
  shell: |
   kind get clusters
  register: kind_clusters
  changed_when: false
  ignore_errors: true
  
- name: kind => create cluster
  shell: |
   kind create cluster --config="{{ ansible_env.HOME }}/kind-cluster/{{ item.clusterName }}-config.yaml" --kubeconfig="{{ ansible_env.HOME }}/.kube/{{ item.clusterName }}-config"
  when: "item.clusterName not in kind_clusters.stdout"

- name: kubernetes => health-check
  shell: |
   /usr/local/bin/kubectl --kubeconfig="{{ ansible_env.HOME }}/.kube/{{ item.clusterName }}-config" get nodes
  register: k8s_health 
  until: "'The connection' not in k8s_health"
  retries: 18
  delay: 10
  when: "item.clusterName not in kind_clusters.stdout"
  
- name: kubernetes => deploy ingress
  shell: |
    kubectl --kubeconfig="{{ ansible_env.HOME }}/.kube/{{ item.clusterName }}-config" apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml
  when: "item.clusterName not in kind_clusters.stdout"

- name: create =>  the '.kube' directory for non-root user
  file:
    path: "{{ remote_regular_user_home }}/.kube"
    state: directory
    mode: 0755
    group: "{{ remote_regular_user }}"
    owner: "{{ remote_regular_user }}"

- name: kind => copy cluster kubeconfigs
  template: 
    src: "{{ ansible_env.HOME }}/.kube/{{ item.clusterName }}-config"
    dest: "{{ remote_regular_user_home }}/.kube/{{ item.clusterName }}-config"
    owner: "{{ ansible_user_id }}" 
    group: "{{ ansible_user_id }}" 
    force: yes
