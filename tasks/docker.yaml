- name: install => prerequisites
  apt:
    name:
      - ca-certificates
      - curl
    state: present

- name: create => /etc/apt/keyrings
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: add => docker keys
  get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/keyrings/docker.asc
    mode: 'a+r'

- name: add => docker repository
  shell: |
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

- name: update => apt-cache 
  apt:
    update_cache: yes

- name: install => docker-ce
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present

- name: ensure => docker group exists
  group:
    name: docker
    state: present

- name: check => docker without sudo
  shell: docker run hello-world
  register: docker_test
  ignore_errors: true
  become: false

- name: notify => user to re-login if docker test fails
  debug:
    msg: >
      "IMPORTANT: Please log out and log in back - or simply re-run this ansible playbook to 
      run Docker commands without sudo. Although your user is added to the docker group,
      it is not possible to run docker commands without sudo, before reinitiating the active user session"
  when: docker_test is failed

- name: exit => playbook after notification
  meta: end_play
  when: docker_test is failed